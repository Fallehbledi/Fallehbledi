"use client"
import Image from 'next/image';
import { useState, useEffect } from 'react';
import { Line } from 'react-chartjs-2';
import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';
import logo from '../../../../public/image/WeatherIcons/clear-day.svg'
import moment from 'moment'
ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);

function Page() {
  const [data, setData] = useState<any>(null);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    fetch("https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/Sousse%20Tunisia?unitGroup=metric&include=days%2Ccurrent%2Calerts&key=9PBBQHHUNP77LD88TPFGWX7L5&contentType=json", {
      method: "GET",
      headers: {}
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to fetch data');
        }
        return response.json();
      })
      .then(data => setData(data))
      .catch(error => setError(error.message));
  }, []);

  if (error) {
    return <div>Error: {error}</div>;
  }

  if (!data) {
    return <div>Loading...</div>;
  }

  const current = data.currentConditions;
  console.log(current);
  
  const forecast = data.days.slice(1, 7); // Get the next 7 days forecast
  const chartData = {
    labels: forecast.map((day: any) => day.datetime),
    datasets: [
      {
        label: 'High Temperature',
        data: forecast.map((day: any) => day.tempmax),
        borderColor: 'rgba(255, 99, 132, 1)', // bright red
        backgroundColor: 'rgba(255, 99, 132, 0.2)', // light red
        fill: true,
      },
      {
        label: 'Low Temperature',
        data: forecast.map((day: any) => day.tempmin),
        borderColor: 'rgba(54, 162, 235, 1)', // bright blue
        backgroundColor: 'rgba(54, 162, 235, 0.2)', // light blue
        fill: true,
      },
    ],
  };

  const chartOptions = {
    responsive: true,
    plugins: {
      legend: {
        display: true,
        labels: {
          color: 'black', // black labels for better visibility
        },
      },
      title: {
        display: true,
        text: 'Temperature Trends',
        color: 'black', // black title for better visibility
      },
    },
    scales: {
      x: {
        ticks: {
          color: 'black', // black labels for better visibility
        },
      },
      y: {
        ticks: {
          color: 'black', // black labels for better visibility
        },
      },
    },
  };

  return (
    <div className=" py-32  mx-auto p-32   ">
            <div className=" rounded-xl p-6 text-gray-900 text-center">
                <h2 className="text-2xl font-bold">Sousse, Tunisia</h2>
                <p className="text-sm ">{moment().calendar()}</p>
                <div className="mt-4 flex items-center justify-center space-x-4">
                    <div className="w-20 h-20 rounded-full flex items-center justify-center">
                      <svg className="h-40 w-40" viewBox="0 -32 512 512"  xmlns="http://www.w3.org/2000/svg"><path d="m62.640625 137.230469c2.804687-46.371094 41.292969-83.113281 88.371094-83.113281 37.964843 0 70.347656 23.902343 82.929687 57.476562 32.695313.394531 59.082032 27.003906 59.082032 59.792969 0 33.035156-26.78125 59.816406-59.816407 59.816406-13.828125 0-154.71875 0-168.925781 0-25.960938 0-47.007812-21.046875-47.007812-47.007813 0-25.410156 20.167968-46.097656 45.367187-46.964843zm0 0" fill="#f0f5f7"/><path d="m293.023438 171.390625c0 23.898437-14.027344 44.53125-34.292969 54.105469 3.652343-7.738282 5.699219-16.390625 5.699219-25.519532 0-32.789062-26.382813-59.402343-59.078126-59.792968-12.585937-33.578125-44.964843-57.476563-82.933593-57.476563-17.121094 0-33.109375 4.859375-46.65625 13.28125 15.625-25.136719 43.480469-41.867187 75.25-41.867187 37.960937 0 70.347656 23.898437 82.925781 57.46875 32.699219.398437 59.085938 27.011718 59.085938 59.800781zm0 0" fill="#dde9ed"/><path d="m460.949219 249.117188c-3.160157-52.179688-46.46875-93.523438-99.445313-93.523438-42.722656 0-79.160156 26.894531-93.320312 64.671875-36.792969.445313-66.484375 30.390625-66.484375 67.289063 0 37.175781 30.136719 67.308593 67.308593 67.308593h190.09375c29.214844 0 52.894532-23.683593 52.894532-52.894531 0-28.597656-22.691406-51.875-51.046875-52.851562zm0 0" fill="#c4e1e8"/><path d="m512 301.964844c0 29.214844-23.6875 52.902344-52.902344 52.902344h-4.097656c3.835938-7.324219 6.007812-15.660157 6.007812-24.496094 0-28.59375-22.691406-51.875-51.050781-52.855469-3.15625-52.175781-46.472656-93.523437-99.445312-93.523437-7.144531 0-14.109375.75-20.820313 2.179687 18.121094-18.847656 43.59375-30.578125 71.8125-30.578125 52.976563 0 96.289063 41.339844 99.445313 93.527344 28.359375.96875 51.050781 24.25 51.050781 52.84375zm0 0" fill="#a4d5dd"/><path d="m428.652344 193.21875c0 65.496094-53.09375 118.589844-118.589844 118.589844-65.5 0-118.59375-53.09375-118.59375-118.589844 0-65.5 53.09375-118.59375 118.59375-118.59375 65.496094 0 118.589844 53.09375 118.589844 118.59375zm0 0" fill="#f6cb43"/><path d="m310.066406 311.808594c-65.5 0-118.59375-53.09375-118.59375-118.59375 0-57.445313 40.84375-105.359375 95.082032-116.253906-1.535157 7.601562-2.335938 15.457031-2.335938 23.511718 0 65.5 53.089844 118.589844 118.589844 118.589844 8.054687 0 15.910156-.800781 23.511718-2.332031-10.910156 54.234375-58.820312 95.078125-116.253906 95.078125zm0 0" fill="#fab03c"/><g fill="#f8e98e"><path d="m495.550781 200.945312h-25.542969c-4.265624 0-7.726562-3.460937-7.726562-7.726562 0-4.269531 3.460938-7.726562 7.726562-7.726562h25.542969c4.269531 0 7.726563 3.457031 7.726563 7.726562 0 4.265625-3.457032 7.726562-7.726563 7.726562zm0 0"/><path d="m448.585938 120.972656c-2.667969 0-5.265626-1.386718-6.695313-3.867187-2.136719-3.695313-.871094-8.421875 2.828125-10.554688l22.121094-12.769531c3.695312-2.132812 8.417968-.871094 10.550781 2.828125 2.136719 3.695313.871094 8.417969-2.828125 10.550781l-22.121094 12.773438c-1.214844.703125-2.542968 1.039062-3.855468 1.039062zm0 0"/><path d="m390.027344 62.425781c-1.308594 0-2.636719-.332031-3.855469-1.035156-3.695313-2.136719-4.960937-6.859375-2.828125-10.554687l12.773438-22.121094c2.132812-3.695313 6.855468-4.964844 10.554687-2.828125 3.695313 2.132812 4.960937 6.859375 2.824219 10.554687l-12.769532 22.121094c-1.429687 2.476562-4.027343 3.863281-6.699218 3.863281zm0 0"/><path d="m310.0625 40.996094c-4.269531 0-7.726562-3.460938-7.726562-7.726563v-25.542969c0-4.265624 3.457031-7.726562 7.726562-7.726562 4.265625 0 7.722656 3.460938 7.722656 7.726562v25.542969c.003906 4.265625-3.457031 7.726563-7.722656 7.726563zm0 0"/><path d="m230.09375 62.425781c-2.667969 0-5.265625-1.386719-6.695312-3.863281l-12.773438-22.121094c-2.132812-3.695312-.867188-8.421875 2.828125-10.554687 3.695313-2.132813 8.421875-.867188 10.554687 2.828125l12.769532 22.121094c2.136718 3.695312.871094 8.421874-2.828125 10.554687-1.214844.703125-2.542969 1.035156-3.855469 1.035156zm0 0"/></g><path d="m259.25 249.117188c-3.160156-52.179688-46.46875-93.523438-99.445312-93.523438-42.722657 0-79.160157 26.894531-93.320313 64.671875-36.792969.445313-66.484375 30.390625-66.484375 67.289063 0 37.171874 30.136719 67.308593 67.308594 67.308593h190.09375c29.214844 0 52.898437-23.683593 52.898437-52.898437-.003906-28.59375-22.695312-51.871094-51.050781-52.847656zm0 0" fill="#c4e1e8"/><path d="m310.300781 301.964844c0 29.214844-23.6875 52.902344-52.902343 52.902344h-4.097657c3.835938-7.324219 6.007813-15.660157 6.007813-24.496094 0-28.59375-22.691406-51.875-51.050782-52.855469-3.15625-52.175781-46.472656-93.523437-99.445312-93.523437-7.144531 0-14.109375.75-20.820312 2.179687 18.121093-18.847656 43.59375-30.578125 71.8125-30.578125 52.976562 0 96.289062 41.339844 99.449218 93.527344 28.355469.96875 51.046875 24.25 51.046875 52.84375zm0 0" fill="#a4d5dd"/><path d="m418.566406 342.792969c-3.15625-52.179688-46.46875-93.523438-99.441406-93.523438-42.726562 0-79.164062 26.894531-93.324219 64.671875-36.789062.445313-66.480469 30.394532-66.480469 67.289063 0 37.175781 30.132813 67.308593 67.308594 67.308593h190.09375c29.210938 0 52.894532-23.683593 52.894532-52.894531 0-28.597656-22.691407-51.875-51.050782-52.851562zm0 0" fill="#f0f5f7"/><path d="m469.621094 395.640625c0 29.214844-23.6875 52.902344-52.902344 52.902344h-4.097656c3.835937-7.324219 6.007812-15.660157 6.007812-24.496094 0-28.59375-22.691406-51.875-51.050781-52.855469-3.15625-52.175781-46.472656-93.523437-99.449219-93.523437-7.144531 0-14.109375.75-20.820312 2.179687 18.125-18.84375 43.597656-30.578125 71.816406-30.578125 52.976562 0 96.289062 41.339844 99.445312 93.527344 28.359376.96875 51.050782 24.25 51.050782 52.84375zm0 0" fill="#dde9ed"/><path d="m392.191406 336.9375c-3.488281 0-6.652344-2.382812-7.503906-5.921875-.894531-3.71875-2.117188-7.386719-3.636719-10.898437-1.695312-3.917969.105469-8.464844 4.023438-10.160157 3.917969-1.695312 8.464843.109375 10.160156 4.023438 1.871094 4.328125 3.375 8.84375 4.476563 13.421875 1 4.152344-1.558594 8.320312-5.707032 9.320312-.605468.144532-1.214844.214844-1.8125.214844zm0 0" fill="#f0f5f7"/><path d="m373.371094 302.578125c-2.03125 0-4.058594-.796875-5.574219-2.378906-12.867187-13.40625-30.152344-20.789063-48.671875-20.789063-4.265625 0-7.726562-3.457031-7.726562-7.726562 0-4.265625 3.460937-7.722656 7.726562-7.722656 22.765625 0 44.011719 9.070312 59.820312 25.542968 2.953126 3.074219 2.855469 7.96875-.222656 10.921875-1.5 1.4375-3.425781 2.152344-5.351562 2.152344zm0 0" fill="#f0f5f7"/><path d="m78.875 372.9375c2.257812-37.304688 33.222656-66.859375 71.09375-66.859375 30.546875 0 56.59375 19.226563 66.71875 46.234375 26.304688.320312 47.53125 21.726562 47.53125 48.105469 0 26.578125-21.542969 48.121093-48.121094 48.121093-11.125 0-124.46875 0-135.902344 0-20.882812 0-37.816406-16.929687-37.816406-37.816406 0-20.441406 16.222656-37.085937 36.496094-37.785156zm0 0" fill="#f0f5f7"/><path d="m264.21875 400.421875c0 26.347656-21.1875 47.75-47.457031 48.109375 7.875-8.574219 12.679687-19.996094 12.679687-32.542969 0-26.375-21.222656-47.785156-47.535156-48.105469-10.121094-27.003906-36.167969-46.238281-66.71875-46.238281-3.609375 0-7.152344.273438-10.621094.792969 12.324219-10.21875 28.144532-16.355469 45.402344-16.355469 30.546875 0 56.59375 19.222657 66.714844 46.234375 26.3125.320313 47.535156 21.722656 47.535156 48.105469zm0 0" fill="#dde9ed"/></svg>
                  </div>
                    <div className="text-6xl font-bold">{current.temp}°</div>
                </div>
                <p className="text-lg mt-2 ">{current.conditions}</p>
                <div className="mt-4 flex justify-center space-x-20 text-gray-900">
                    <div>
                        <p className="text-sm">Wind Speed</p>
                        <p>{current.windspeed} mph</p>
                    </div>
                    <div>
                        <p className="text-sm">Sunset</p>
                        <p>{current.sunset}</p>
                    </div>
                    <div>
                        <p className="text-sm">Sunrise</p>
                        <p>{current.sunrise}</p>
                    </div>
                    <div>
                        <p className="text-sm">Rain</p>
                        <p>{current.dew} %</p>
                    </div>
                    <div>
                        <p className="text-sm">Humidity</p>
                        <p>{current.humidity}</p>
                    </div>
                </div>
            </div>

            <div className="text-gray-900 mt-8">
                <h3 className="text-lg font-semibold ">Today's Weather</h3>
                <div className="mt-4 flex justify-between text-center text-gray-900">
                    {["3am", "6am", "9am", "12pm", "3pm", "6pm", "9pm"].map((time, idx) => (
                        <div key={idx} className="flex flex-col items-center bg-black bg-opacity-5 rounded-xl p-4 w-32 ">
                            <div className="w-10 h-10 flex items-center justify-center">
                                <div>
                    <svg className="w-10" viewBox="0 -32 512 512"  xmlns="http://www.w3.org/2000/svg"><path d="m62.640625 137.230469c2.804687-46.371094 41.292969-83.113281 88.371094-83.113281 37.964843 0 70.347656 23.902343 82.929687 57.476562 32.695313.394531 59.082032 27.003906 59.082032 59.792969 0 33.035156-26.78125 59.816406-59.816407 59.816406-13.828125 0-154.71875 0-168.925781 0-25.960938 0-47.007812-21.046875-47.007812-47.007813 0-25.410156 20.167968-46.097656 45.367187-46.964843zm0 0" fill="#f0f5f7"/><path d="m293.023438 171.390625c0 23.898437-14.027344 44.53125-34.292969 54.105469 3.652343-7.738282 5.699219-16.390625 5.699219-25.519532 0-32.789062-26.382813-59.402343-59.078126-59.792968-12.585937-33.578125-44.964843-57.476563-82.933593-57.476563-17.121094 0-33.109375 4.859375-46.65625 13.28125 15.625-25.136719 43.480469-41.867187 75.25-41.867187 37.960937 0 70.347656 23.898437 82.925781 57.46875 32.699219.398437 59.085938 27.011718 59.085938 59.800781zm0 0" fill="#dde9ed"/><path d="m460.949219 249.117188c-3.160157-52.179688-46.46875-93.523438-99.445313-93.523438-42.722656 0-79.160156 26.894531-93.320312 64.671875-36.792969.445313-66.484375 30.390625-66.484375 67.289063 0 37.175781 30.136719 67.308593 67.308593 67.308593h190.09375c29.214844 0 52.894532-23.683593 52.894532-52.894531 0-28.597656-22.691406-51.875-51.046875-52.851562zm0 0" fill="#c4e1e8"/><path d="m512 301.964844c0 29.214844-23.6875 52.902344-52.902344 52.902344h-4.097656c3.835938-7.324219 6.007812-15.660157 6.007812-24.496094 0-28.59375-22.691406-51.875-51.050781-52.855469-3.15625-52.175781-46.472656-93.523437-99.445312-93.523437-7.144531 0-14.109375.75-20.820313 2.179687 18.121094-18.847656 43.59375-30.578125 71.8125-30.578125 52.976563 0 96.289063 41.339844 99.445313 93.527344 28.359375.96875 51.050781 24.25 51.050781 52.84375zm0 0" fill="#a4d5dd"/><path d="m428.652344 193.21875c0 65.496094-53.09375 118.589844-118.589844 118.589844-65.5 0-118.59375-53.09375-118.59375-118.589844 0-65.5 53.09375-118.59375 118.59375-118.59375 65.496094 0 118.589844 53.09375 118.589844 118.59375zm0 0" fill="#f6cb43"/><path d="m310.066406 311.808594c-65.5 0-118.59375-53.09375-118.59375-118.59375 0-57.445313 40.84375-105.359375 95.082032-116.253906-1.535157 7.601562-2.335938 15.457031-2.335938 23.511718 0 65.5 53.089844 118.589844 118.589844 118.589844 8.054687 0 15.910156-.800781 23.511718-2.332031-10.910156 54.234375-58.820312 95.078125-116.253906 95.078125zm0 0" fill="#fab03c"/><g fill="#f8e98e"><path d="m495.550781 200.945312h-25.542969c-4.265624 0-7.726562-3.460937-7.726562-7.726562 0-4.269531 3.460938-7.726562 7.726562-7.726562h25.542969c4.269531 0 7.726563 3.457031 7.726563 7.726562 0 4.265625-3.457032 7.726562-7.726563 7.726562zm0 0"/><path d="m448.585938 120.972656c-2.667969 0-5.265626-1.386718-6.695313-3.867187-2.136719-3.695313-.871094-8.421875 2.828125-10.554688l22.121094-12.769531c3.695312-2.132812 8.417968-.871094 10.550781 2.828125 2.136719 3.695313.871094 8.417969-2.828125 10.550781l-22.121094 12.773438c-1.214844.703125-2.542968 1.039062-3.855468 1.039062zm0 0"/><path d="m390.027344 62.425781c-1.308594 0-2.636719-.332031-3.855469-1.035156-3.695313-2.136719-4.960937-6.859375-2.828125-10.554687l12.773438-22.121094c2.132812-3.695313 6.855468-4.964844 10.554687-2.828125 3.695313 2.132812 4.960937 6.859375 2.824219 10.554687l-12.769532 22.121094c-1.429687 2.476562-4.027343 3.863281-6.699218 3.863281zm0 0"/><path d="m310.0625 40.996094c-4.269531 0-7.726562-3.460938-7.726562-7.726563v-25.542969c0-4.265624 3.457031-7.726562 7.726562-7.726562 4.265625 0 7.722656 3.460938 7.722656 7.726562v25.542969c.003906 4.265625-3.457031 7.726563-7.722656 7.726563zm0 0"/><path d="m230.09375 62.425781c-2.667969 0-5.265625-1.386719-6.695312-3.863281l-12.773438-22.121094c-2.132812-3.695312-.867188-8.421875 2.828125-10.554687 3.695313-2.132813 8.421875-.867188 10.554687 2.828125l12.769532 22.121094c2.136718 3.695312.871094 8.421874-2.828125 10.554687-1.214844.703125-2.542969 1.035156-3.855469 1.035156zm0 0"/></g><path d="m259.25 249.117188c-3.160156-52.179688-46.46875-93.523438-99.445312-93.523438-42.722657 0-79.160157 26.894531-93.320313 64.671875-36.792969.445313-66.484375 30.390625-66.484375 67.289063 0 37.171874 30.136719 67.308593 67.308594 67.308593h190.09375c29.214844 0 52.898437-23.683593 52.898437-52.898437-.003906-28.59375-22.695312-51.871094-51.050781-52.847656zm0 0" fill="#c4e1e8"/><path d="m310.300781 301.964844c0 29.214844-23.6875 52.902344-52.902343 52.902344h-4.097657c3.835938-7.324219 6.007813-15.660157 6.007813-24.496094 0-28.59375-22.691406-51.875-51.050782-52.855469-3.15625-52.175781-46.472656-93.523437-99.445312-93.523437-7.144531 0-14.109375.75-20.820312 2.179687 18.121093-18.847656 43.59375-30.578125 71.8125-30.578125 52.976562 0 96.289062 41.339844 99.449218 93.527344 28.355469.96875 51.046875 24.25 51.046875 52.84375zm0 0" fill="#a4d5dd"/><path d="m418.566406 342.792969c-3.15625-52.179688-46.46875-93.523438-99.441406-93.523438-42.726562 0-79.164062 26.894531-93.324219 64.671875-36.789062.445313-66.480469 30.394532-66.480469 67.289063 0 37.175781 30.132813 67.308593 67.308594 67.308593h190.09375c29.210938 0 52.894532-23.683593 52.894532-52.894531 0-28.597656-22.691407-51.875-51.050782-52.851562zm0 0" fill="#f0f5f7"/><path d="m469.621094 395.640625c0 29.214844-23.6875 52.902344-52.902344 52.902344h-4.097656c3.835937-7.324219 6.007812-15.660157 6.007812-24.496094 0-28.59375-22.691406-51.875-51.050781-52.855469-3.15625-52.175781-46.472656-93.523437-99.449219-93.523437-7.144531 0-14.109375.75-20.820312 2.179687 18.125-18.84375 43.597656-30.578125 71.816406-30.578125 52.976562 0 96.289062 41.339844 99.445312 93.527344 28.359376.96875 51.050782 24.25 51.050782 52.84375zm0 0" fill="#dde9ed"/><path d="m392.191406 336.9375c-3.488281 0-6.652344-2.382812-7.503906-5.921875-.894531-3.71875-2.117188-7.386719-3.636719-10.898437-1.695312-3.917969.105469-8.464844 4.023438-10.160157 3.917969-1.695312 8.464843.109375 10.160156 4.023438 1.871094 4.328125 3.375 8.84375 4.476563 13.421875 1 4.152344-1.558594 8.320312-5.707032 9.320312-.605468.144532-1.214844.214844-1.8125.214844zm0 0" fill="#f0f5f7"/><path d="m373.371094 302.578125c-2.03125 0-4.058594-.796875-5.574219-2.378906-12.867187-13.40625-30.152344-20.789063-48.671875-20.789063-4.265625 0-7.726562-3.457031-7.726562-7.726562 0-4.265625 3.460937-7.722656 7.726562-7.722656 22.765625 0 44.011719 9.070312 59.820312 25.542968 2.953126 3.074219 2.855469 7.96875-.222656 10.921875-1.5 1.4375-3.425781 2.152344-5.351562 2.152344zm0 0" fill="#f0f5f7"/><path d="m78.875 372.9375c2.257812-37.304688 33.222656-66.859375 71.09375-66.859375 30.546875 0 56.59375 19.226563 66.71875 46.234375 26.304688.320312 47.53125 21.726562 47.53125 48.105469 0 26.578125-21.542969 48.121093-48.121094 48.121093-11.125 0-124.46875 0-135.902344 0-20.882812 0-37.816406-16.929687-37.816406-37.816406 0-20.441406 16.222656-37.085937 36.496094-37.785156zm0 0" fill="#f0f5f7"/><path d="m264.21875 400.421875c0 26.347656-21.1875 47.75-47.457031 48.109375 7.875-8.574219 12.679687-19.996094 12.679687-32.542969 0-26.375-21.222656-47.785156-47.535156-48.105469-10.121094-27.003906-36.167969-46.238281-66.71875-46.238281-3.609375 0-7.152344.273438-10.621094.792969 12.324219-10.21875 28.144532-16.355469 45.402344-16.355469 30.546875 0 56.59375 19.222657 66.714844 46.234375 26.3125.320313 47.535156 21.722656 47.535156 48.105469zm0 0" fill="#dde9ed"/></svg>

                                </div>
                            </div>
                            <p className="mt-2">{time}</p>
                            <p className="text-sm">{idx * 2 + 14}°</p>
                        </div>
                    ))}
                </div>
            </div>

            <div className="mt-8">
                <h3 className="text-lg font-semibold">Next 5 Days</h3>
                <div className="mt-4 space-y-4 text-gray-700">
                    {["Sun 10/08", "Sat 11/08", "Mond 12/08"].map((day, idx) => (
                        <div key={idx} className="flex justify-between  items-center">
                                <div className="w-10 h-10 border rounded-full flex items-center justify-center">
                                    <div>☀️</div>
                                </div>
                                <div>
                                    <p>{day}</p>
                                    <p className="text-sm text-gray-500">{33 - idx}° Low / {35 + idx * 3}° High</p>
                                </div>
                                <div className="text-center">
                                    <p className="text-sm">Wind</p>
                                    <p>{12 - idx * 5}mph</p>
                                </div>
                                <div className="text-center">
                                    <p className="text-sm">Sunset</p>
                                    <p>19:13 </p>
                                </div>
                                <div className="text-center">
                                    <p className="text-sm">Sunrise</p>
                                    <p>05:31:43</p>
                                </div>
                                <div className="text-center">
                                    <p className="text-sm">Rain</p>
                                    <p>0%</p>
                                </div>
                        </div>
                    ))}
                </div>
            </div>
        </div>
  );
}

export default Page;










 {/*<div className='py-6 md:max-w-5xl mx-auto mb-4 w-full px-4'>
      <div className='flex-1 p-3 text-gray-900'>
        <div className='max-w-sm w-full lg:max-w-full shadow px-6 py-6 rounded-lg mb-6 mt-20 bg-green-300 mx-auto'>
          <div className='flex flex-col gap-y-3 mb-5 p-4 bg-blue-950 bg-opacity-20 rounded-lg border border-gray-900 border-opacity-40'>
            <div>
              <p>{current.conditions}</p>
              <p>{current.datetime}</p>
            </div>
            <div className='flex items-center gap-3'>
              <Image
                src={require(`../../../public/image/WeatherIcons/${current.icon}.svg`)}
                alt='Weather Icon'
                width='50'
              />
              <h3 className='text-3xl'>{current.temp}°</h3>
              <div>
                <p>{current.conditions}</p>
                <p>Feels like {current.feelslike}°</p>
              </div>
            </div>
            <p>The skies will be mostly clear. The low will be {current.tempmin}°.</p>
            <div className='flex flex-wrap gap-5'>
              <div>
                <p>Wind</p>
                <p>{current.windspeed} km/h</p>
              </div>
              <div>
                <p>Humidity</p>
                <p>{current.humidity}%</p>
              </div>
              <div>
                <p>Visibility</p>
                <p>{current.visibility} km</p>
              </div>
              <div>
                <p>Pressure</p>
                <p>{current.pressure} hPa</p>
              </div>
              <div>
                <p>Dew point</p>
                <p>{current.dew}</p>
              </div>
            </div>
          </div>
          <div>
            <h2 className='text-lg font-bold'>7 days forecast</h2>
            <div className='flex flex-wrap gap-2 w-full'>
              <div className='flex-1 p-2 bg-blue-950 bg-opacity-20 rounded-lg border border-white border-opacity-40'>
                <p>Today</p>
                <div className='flex justify-between'>
                  <div>
                    <p>⛅</p>
                    <p>{current.temp}°</p>
                  </div>
                  <div className='flex flex-col items-end'>
                    <p>{current.conditions}</p>
                    <p>{current.precipprob}%</p>
                  </div>
                </div>
              </div>
              {forecast.map((day: any, idx: any) => (
                <div
                  className='flex-1 p-2 bg-blue-950 bg-opacity-20 rounded-lg border border-white border-opacity-40'
                >
                  <p>{day.datetime}</p>
                  <div className='flex gap-3 justify-center items-center'>
                    <Image src ={require(`../../../public/image/WeatherIcons/${day.icon}.svg`)} alt='' width='50'/>
                    <div>
                      <p>{day.tempmax}°</p>
                      <p>{day.tempmin}°</p>
                      <p>{day.precipprob}%</p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
        <div className='mt-6 bg-gray-200 rounded-xl'>
          <h2 className='text-lg font-bold text-green-800 ml-8'>Temperature Trends</h2>
          <div className='overflow-auto'>
            <Line data={chartData} options={chartOptions} />
          </div>
        </div>
      </div>
    </div>*/}